"""add notifications table

Revision ID: 2ef08bf146fd
Revises: bca0417f931d
Create Date: 2020-04-11 17:05:28.730492

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2ef08bf146fd'
down_revision = 'bca0417f931d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.Float(), nullable=True),
    sa.Column('payload_json', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_notifications_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notifications'))
    )
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notifications_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_notifications_timestamp'), ['timestamp'], unique=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('last_followeds_posts_read_time', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('last_follows_read_time', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('last_likes_read_time', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('last_recived_comments_read_time', sa.DateTime(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('last_recived_comments_read_time')
        batch_op.drop_column('last_likes_read_time')
        batch_op.drop_column('last_follows_read_time')
        batch_op.drop_column('last_followeds_posts_read_time')

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notifications_timestamp'))
        batch_op.drop_index(batch_op.f('ix_notifications_name'))

    op.drop_table('notifications')
    # ### end Alembic commands ###
